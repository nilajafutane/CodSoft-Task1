import tkinter as tk
from tkinter import messagebox, simpledialog

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List Application")
        self.root.geometry("600x650")
        self.tasks = []
        self.create_widgets()

    def create_widgets(self):
        self.title_label = tk.Label(self.root, text="To-Do List", font=("Arial", 16))
        self.title_label.pack(pady=10)

        self.task_listbox = tk.Listbox(self.root, selectmode=tk.SINGLE, font=("Arial", 12))
        self.task_listbox.pack(padx=20, pady=20, fill=tk.BOTH, expand=True)

        self.scrollbar = tk.Scrollbar(self.task_listbox, orient=tk.VERTICAL, command=self.task_listbox.yview)
        self.scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        self.task_listbox.config(yscrollcommand=self.scrollbar.set)

        self.task_entry = tk.Entry(self.root, font=("Arial", 12))
        self.task_entry.pack(pady=10)

        self.add_task_button = tk.Button(self.root, text="Add Task", command=self.add_task, font=("Arial", 12))
        self.add_task_button.pack(pady=5)

        self.delete_task_button = tk.Button(self.root, text="Delete Task", command=self.delete_task, font=("Arial", 12))
        self.delete_task_button.pack(pady=5)

        self.mark_complete_button = tk.Button(self.root, text="Mark as Complete", command=self.mark_complete, font=("Arial", 12))
        self.mark_complete_button.pack(pady=5)

    def add_task(self):
        task = self.task_entry.get().strip()
        if task:
            self.tasks.append(task)
            self.update_task_listbox()
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "You must enter a task.")

    def delete_task(self):
        try:
            selected_index = self.task_listbox.curselection()[0]
            self.tasks.pop(selected_index)
            self.update_task_listbox()
        except IndexError:
            messagebox.showwarning("Warning", "You must select a task to delete.")

    def mark_complete(self):
        try:
            selected_index = self.task_listbox.curselection()[0]
            self.tasks[selected_index] = f"{self.tasks[selected_index]} âœ”"
            self.update_task_listbox()
        except IndexError:
            messagebox.showwarning("Warning", "You must select a task to mark as complete.")

    def update_task_listbox(self):
        self.task_listbox.delete(0, tk.END)
        for task in self.tasks:
            self.task_listbox.insert(tk.END, task)

def main():
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()
